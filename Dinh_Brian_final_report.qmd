---
title: "Final Report on Brooklyn Housing Dataset (2003-2017)"
subtitle: |
  | Class: Data Science 1 with R (STAT 301-1)
author: "Brian Dinh"
date: today
fig-cap-location: top
format:
  html:
    toc: true
    embed-resources: true
    
execute:
  echo: true
  warning: false
number-sections: true
from: markdown+emoji 
---

::: {.callout-tip icon="false"}
## Github Repo Link

<https://github.com/stat301-1-2023-fall/final-project-1-BrianDinh26.git>
:::

```{r}
#| echo: false
#| label: import
#import dataset and libraries at top of document

#I do not want scientific notation for my graphs.
options(scipen = 999)

#libraries
library(tidyverse)
library(naniar)
library(janitor)
library(visdat)
library(ggthemes)

#import dataset
brooklyn_sales <- read_csv("data/brooklyn_sales_clean.csv")
```

# Introduction {#sec-introduction}

For this report, I explored a dataset labelled "[Brooklyn Home Sales 2003 to 2017](https://www.kaggle.com/datasets/tianhwu/brooklynhomes2003to2017/data)," which describes information in regards to all buildings, residential and nonresidential, sold in the New York borough of Brooklyn. The data comes from the government of the state of New York, and links to the data can be found under References ([@sec-references]). Additionally, the cleaned dataset could not be uploaded to GitHub for the same reason, [so I have added a Google Drive link to it here](https://drive.google.com/drive/folders/1_OyRKj4xWoZ5CgJ5v0GhLubceh9yT5wW?usp=sharing).

For this exploratory data analysis, I was primarily motivated by my curiosity in what could be the main motivators for selling more buildings in the Brooklyn market, especially since buildings in this area tend to be more expensive than the rest of the United States due to its urbanity and access to New York City as a whole. Additionally, I wished to look at what factors could have affected housing price increases in the area. Last of all, I wanted to look at what areas in Brooklyn are the most desired based on the popularity in sales in this dataset and what neighborhoods have become less popular.

# Data Overview and Quality

For the original "Brooklyn Home Sales 2003 to 2017" dataset, there are 111 variables and 390,883 observations. There are 32 categorical variables, 71 numerical variables, 7 logical variables, and 1 date variable. 

There are missingness issues for many columns associated with geographic mapping information, borough data (e.g. what borough the building is in), and some building information (like total units, building stories, etc.). Due to this missingness, I will not be able to construct a geographic visualization of the data using a dashboard package like Shiny and may be limited in my analysis of nonresidential buildings, as thorough building information could affect nonresidential prices. I do not believe the missing borough data will affect my analysis because all of the buildings sold are located in Brooklyn.

The dataset is not in the GitHub for this final project as it is too large (207.6 MB) to commit to the GitHub, so please refer to the hyperlink above in Introduction ([@sec-introduction]) for access to the original dataset and the cleaned dataset.

The cleaned dataset has 390,833 observations and 81 columns. There are 19 categorical variables, 61 numeric variables, and 1 date variable.

# Explorations

## How many buildings are being sold in Brooklyn over time?

Before exploring this question, I wanted to check to see the different types of buildings being sold in Brooklyn, because my initial hypothesis assumes that the building type can greatly affect certain data about the building. The variable of `tax_class_at_sale` categorizes the type of building sold into 4 categories according to the state of New York:

* **(Class 1)**: Includes most residential property of up to three units (such as one-, two-, and three-family homes and small stores or offices with one or two attached apartments), vacant land that is zoned for residential use, and most condominiums that are not more than three stories.
* **(Class 2)**: Includes all other property that is primarily residential, such as cooperatives and condominiums.
* **(Class 3)**: Includes property with equipment owned by a gas, telephone or electric company.
* **(Class 4)**: Includes all other properties not included in class 1,2, and 3, such as offices, factories, warehouses, garage buildings, etc.

```{r}
#| echo: false
#| eval: false
#| label: fig-tax
#| fig-cap: "Distributions of Building Sold in Brooklyn by Tax Classes"
#| fig-subcap:
#|   - "Counts of Tax Classes of Buildings Sold in Brooklyn, 2003-2017"
#|   - "Distribution of Brooklyn Building Sale Prices by Tax Class and Time, 2003-2017"
#|   - "Distribution of Brooklyn Building Square Feet by Tax Class and Time, 2003-2017"
#| layout-ncol: 1

#figure 1a
brooklyn_sales |> 
  filter(is.na(tax_class_at_sale) == FALSE) |> 
  group_by(tax_class_at_sale) |> 
  mutate(tax_class_at_sale = as.factor(tax_class_at_sale),
         n = n()) |>
  ggplot(aes(y = fct_reorder(tax_class_at_sale, n), fill = tax_class_at_sale)) +
  theme_minimal() +
  geom_bar() +
  scale_x_continuous(label = scales::comma) +
  labs(
    y = "Tax Class\nAt Sale",
    x = "Count",
    caption = "Source: NYC Department of Finance"
  ) +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5),
        legend.position = "none")

#figure 1b
brooklyn_sales |> 
  mutate(tax_class_at_sale = as.factor(tax_class_at_sale)) |> 
  ggplot(aes(x = sale_date, y = sale_price, color = tax_class_at_sale)) +
  theme_minimal() +
  geom_line() +
  scale_y_continuous(labels = scales::dollar_format()) +
  labs(x = "Sale Date",
       y = "Sale Price",
       caption = "Source: NYC Department of Finance",
       color = "Tax Class\nat Sale") +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))

#figure 1c
brooklyn_sales |> 
  mutate(tax_class_at_sale = as.factor(tax_class_at_sale)) |> 
  ggplot(aes(x = sale_date, y = land_sqft, color = tax_class_at_sale)) +
  theme_minimal() +
  geom_line() +
  scale_y_continuous(labels = scales::comma_format()) +
  labs(x = "Sale Date",
       y = "Square\nFt",
       caption = "Source: NYC Department of Finance",
       color = "Tax Class\nat Sale") +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
  
```

According to @fig-tax-1, it appears that the most actively sold buildings are primarily residential buildings in classes 1 and 2, with class 4 buildings coming third and class 3 buldings not being sold too often. Additionally, class 4 buildings appear to cause large skews in both price and square feet, as according to @fig-tax-2 and @fig-tax-3, the majority of larger and more expensive buildings were class 4.

Thus, I will separate my dataset into residential (class 1 and class 2) buildings and non-residential (class 3 and class 4) buildings, with the majority of my analysis focusing on the residential dataset.

```{r}
#| echo: false
#| label: tax-filter

brooklyn_sales_res <- brooklyn_sales |> 
  filter(tax_class_at_sale == c("1", "2"))

brooklyn_sales_nonres <- brooklyn_sales |> 
  filter(tax_class_at_sale == c("3", "4"))
```

After separating the dataset, I wanted to look at how the number of sales for buildings have changed year by year, as I want to see if there are any periods of downturns or relatively high counts of building sales.

```{r}
#| label: fig-year-count
#| echo: false
#| eval: false
#| fig-cap: Distribution of Brooklyn Building Sales by Year
#| fig-subcap:
#|   - "Number of Residential Building Sales in Brooklyn by Year"
#|   - "Number of Non-Residential Building Sales in Brooklyn by Year"
#| layout-ncol: 2

#figure 2a
brooklyn_sales_res |> 
  group_by(year_of_sale) |> 
  ggplot() +
  theme_minimal() +
  geom_bar(aes(y = year_of_sale), fill ="#d3e3e1", color = "black") +
  scale_y_reverse(breaks = c(2003, 2004, 2005, 2006,
                             2007, 2008, 2009, 2010,
                             2011, 2012, 2013, 2014,
                             2015, 2016, 2017)) +
  scale_x_continuous(labels = c("0", "5,000", "10,000", "15,000")) +
  labs(x = "Number of Sales",
       y = "Year of\nSale",
       caption = "Source: NYC Department of Finance") +
  theme(
    axis.title.y = element_text(angle = 0, 
                                vjust = 0.5,
                                margin = margin(t = 0, r = 10, b = 0, l = 0))
  )

#figure 2b
brooklyn_sales_nonres |> 
  group_by(year_of_sale) |> 
  ggplot() +
  theme_minimal() +
  geom_bar(aes(y = year_of_sale), fill ="#e9f2b8", color = "black") +
  scale_y_reverse(breaks = c(2003, 2004, 2005, 2006,
                             2007, 2008, 2009, 2010,
                             2011, 2012, 2013, 2014,
                             2015, 2016, 2017)) +
  labs(x = "Number of Sales",
       y = "Year of\nSale",
       caption = "Source: NYC Department of Finance") +
  theme(
    axis.title.y = element_text(angle = 0, 
                                vjust = 0.5,
                                margin = margin(t = 0, r = 10, b = 0, l = 0))
  )
```
In both @fig-year-count-1 and @fig-year-count-2, the distribution of sales in Brooklyn tended to be the highest from 2003 to 2006, while there was a significant dip in sales from 2007 to 2010, which was stronger for residential buildings than it was for non-residential buildings. From to 2011 to 2017, there appears to have been a recovery in building sales. These three time periods are interesting to look at in terms of determining if the three time periods had the same trends or not. For example, one immediate question I had was if the decrease in sales was due to an increase or decrease in price in the building market. To analyze this, I made the following line plots, which analyze the average sale prices for buildings sold in Brooklyn, grouped by year.

```{r}
#| label: fig-sale-line
#| echo: false
#| eval: false
#| fig-cap: Average Building Sale Prices by Year in Brooklyn
#| fig-subcap:
#|   - "Average Residential Building Sale Price by Year, Brooklyn"
#|   - "Average Non-Residential Building Sale Price by Year, Brooklyn"
#| layout-ncol: 1

# GRAPH OF AVG SALE PRICE OVER TIME FOR RESIDENTIAL ONLY
brooklyn_sales_res |> 
  group_by(year_of_sale) |> 
  mutate(yearly_avg_price = mean(sale_price)) |> 
  ggplot(aes(x = year_of_sale, y = yearly_avg_price)) +
  theme_minimal() + 
  geom_line(color ="#d3e3e1", linewidth = 2) +
  geom_point(color ="black", size = 2) +
  scale_x_continuous(breaks = c(2003, 2005, 2007,
                                2009, 2011, 2013,
                                2015, 2017)) + 
  scale_y_continuous(breaks = c(200000, 400000, 600000, 800000),
                     labels = c("$200,000", "$400,000", "$600,000", "$800,000")) +
  labs(y = "Price ($)",
       x = "Year",
       caption = "Source: NYC Department of Finance") +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))

# GRAPH OF SALES OVER TIME FOR NON-RESIDENTIAL ONLY
brooklyn_sales_nonres |> 
  group_by(year_of_sale) |> 
  mutate(yearly_avg_price = mean(sale_price)) |> 
  ggplot(aes(x = year_of_sale, y = yearly_avg_price)) +
  theme_minimal() +
  geom_line(color = "#e9f2b8", linewidth = 2) +
  geom_point(color = "black", size = 2) +
  scale_x_continuous(breaks = c(2003, 2005, 2007,
                                2009, 2011, 2013,
                                2015, 2017)) + 
  scale_y_continuous(breaks = c(400000, 800000, 1200000, 1600000, 2000000),
                     labels = c("$400,000", "$800,000", "$1,200,000", "$1,600,000", "2,000,000")) +
  labs(y = "Price ($)",
       x = "Year",
       caption = "Source: NYC Department of Finance") +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
```
Looking at @fig-sale-line-1 and @fig-sale-line-2, it appears that the average sale price of buildings in Brooklyn actually decreased in the 2007-2010 range, which means that my hypothesis of lower sales meaning higher prices was incorrect. To investigate further, let us look at the price ranges of the buildings sold during the three time periods of 2003-2006, 2007-2010, and 2011-2017.

```{r}
#| label: fig-price-cuts
#| echo: false
#| eval: false
#| fig-cap: "Distribution of Count of Residential Buildings Sold in Brooklyn by Price"
#| fig-subcap:
#|   - "2003-2006"
#|   - "2007-2010"
#|   - "2011-2017"
#| layout-ncol: 1

#2003-2006
brooklyn_sales_res |>
  filter(sale_price > 10,
         year_of_sale == c(2003, 2004, 2005, 2006)) |>
  mutate(sale_price = cut(
    sale_price,
    breaks = c(
      0,
      200000,
      300000,
      400000,
      500000,
      600000,
      700000,
      800000,
      900000,
      1000000,
      1250000,
      1500000,
      1750000,
      2000000,
      2500000,
      3000000,
      6000000
    )
  )) |>
  filter(is.na(sale_price) == FALSE) |>
  ggplot() +
  geom_bar(aes(x = sale_price),
           color = "black",
           fill = "#d3e3e1") +
  scale_x_discrete(
    labels = c(
      "< $200k",
      "$200k-$300k",
      "$300k-$400k",
      "$400k-$500k",
      "$500k-$600k",
      "$600k-$700k",
      "$700k-$800k",
      "$800k-$900k",
      "$900k-$1m",
      "$1m-$1.25m",
      "$1.25m-$1.5m",
      "$1.5m-$1.75m",
      "$1.75m-$2m",
      "$2m-$2.5m",
      "$2.5m-$3m",
      "$3m-$6m"
    )
  ) +
  scale_y_continuous(breaks = c(500, 1000, 1500, 2000)) +
  coord_cartesian(ylim = c(0, 2000)) +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 4),
        # stick with 4 cause fits html well.
        axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  labs(
    title = "Distribution of Count of Residential Buildings Sold in Brooklyn by Price",
    subtitle = "2003 to 2006",
    x = "Sale Price Ranges",
    y = "Count"
  )

#2007-2010
brooklyn_sales_res |>
  filter(sale_price > 10,
         year_of_sale == c(2007, 2008, 2009, 2010)) |>
  mutate(sale_price = cut(
    sale_price,
    breaks = c(
      0,
      200000,
      300000,
      400000,
      500000,
      600000,
      700000,
      800000,
      900000,
      1000000,
      1250000,
      1500000,
      1750000,
      2000000,
      2500000,
      3000000,
      6000000
    )
  )) |>
  filter(is.na(sale_price) == FALSE) |>
  ggplot() +
  geom_bar(aes(x = sale_price),
           color = "black",
           fill = "#d3e3e1") +
  scale_x_discrete(
    labels = c(
      "< $200k",
      "$200k-$300k",
      "$300k-$400k",
      "$400k-$500k",
      "$500k-$600k",
      "$600k-$700k",
      "$700k-$800k",
      "$800k-$900k",
      "$900k-$1m",
      "$1m-$1.25m",
      "$1.25m-$1.5m",
      "$1.5m-$1.75m",
      "$1.75m-$2m",
      "$2m-$2.5m",
      "$2.5m-$3m",
      "$3m-$6m"
    )
  ) +
  scale_y_continuous(breaks = c(500, 1000, 1500, 2000),
                     labels = scales::comma) +
  coord_cartesian(ylim = c(0, 2000)) +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 4),
        # stick with 4 cause fits html well.
        axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  labs(
    title = "Distribution of Count of Residential Buildings Sold in Brooklyn by Price",
    subtitle = "test to test",
    x = "Sale Price Ranges",
    y = "Count"
  )

#2011-2017
brooklyn_sales_res |>
  filter(sale_price > 10,
         year_of_sale == c(2011, 2012, 2013, 2014, 2015, 2016, 2017)) |>
  mutate(sale_price = cut(
    sale_price,
    breaks = c(
      0,
      200000,
      300000,
      400000,
      500000,
      600000,
      700000,
      800000,
      900000,
      1000000,
      1250000,
      1500000,
      1750000,
      2000000,
      2500000,
      3000000,
      6000000
    )
  )) |>
  filter(is.na(sale_price) == FALSE) |>
  ggplot() +
  geom_bar(aes(x = sale_price),
           color = "black",
           fill = "#d3e3e1") +
  scale_x_discrete(
    labels = c(
      "< $200k",
      "$200k-$300k",
      "$300k-$400k",
      "$400k-$500k",
      "$500k-$600k",
      "$600k-$700k",
      "$700k-$800k",
      "$800k-$900k",
      "$900k-$1m",
      "$1m-$1.25m",
      "$1.25m-$1.5m",
      "$1.5m-$1.75m",
      "$1.75m-$2m",
      "$2m-$2.5m",
      "$2.5m-$3m",
      "$3m-$6m"
    )
  ) +
  scale_y_continuous(breaks = c(500, 1000, 1500, 2000)) +
  coord_cartesian(ylim = c(0, 2000)) +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 4),
        # stick with 4 cause fits html well.
        axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  labs(
    title = "Distribution of Count of Residential Buildings Sold in Brooklyn by Price",
    subtitle = "2011 to 2017",
    x = "Sale Price Ranges",
    y = "Count"
  )
```

In @fig-price-cuts-1, @fig-price-cuts-2, and @fig-price-cuts-3, the most common selling price in Brooklyn ranges from the $300k to $500k range, with this being the most prominent within @fig-price-cuts-1. However, with @fig-price-cuts-2, the number of homes sold at slightly above the $300k to $500k range significantly decreased, which could have caused the average price decreases for this time period. Within the 2011 to 2017 range, there has been a more subtle increase in properties being sold in the $700k to $1m range despite buildings in the $300k to $500k range being the most common, which could explain the immense increases in residential building prices over time.

**NOTE: CONSIDER ADDING NON-RESIDENTIAL ANALYSIS OF BUILDINGS SOLD WITH PRICE CUTS**

## What affects the price for buildings?
For the next part of my EDA, I wanted to look at what affects the price of buildings in Brooklyn. First off, I wanted to analyze the relationship between square feet and price using a scatter plot.

```{r}
#| label: fig-ft-price
#| echo: false
#| eval: true
#| fig-cap: "Brooklyn Residential Building Sale Price compared to Gross Square Ft"

brooklyn_sales_res |>
  filter(sale_price > 1500,
         gross_sqft > 15) |>
  ggplot(aes(y = sale_price, x = gross_sqft)) +
  geom_point(alpha = 0.5) +
  geom_jitter(alpha = 0.5) +
  geom_smooth() +
  theme_minimal() +
  coord_cartesian(ylim = c(0, 4000000), xlim = c(0, 10000)) +
  labs(x = "Gross Square Ft",
       y = "Sale\nPrice") +
  theme(axis.title.y = element_text(
    angle = 0,
    vjust = 0.5,
    margin = margin(
      t = 0,
      r = 10,
      b = 0,
      l = 0
    )
  )) +
  scale_y_continuous(label = scales::dollar_format()) +
  scale_x_continuous(label = scales::comma_format())

```

In @fig-ft-price, looking at the linear fitting line, it appears that there is a general positive relationship between price and square feet, meaning that the more square feet a property has, the more expensive it is, which was expected.

Another variable I wanted to look at was `prox_code`, which identifies the proximity of the property to another property. `prox_code` is split into three categories: detached, semi-attached, and attached.

```{r}
#| label: fig-prox-price
#| echo: false
#| eval: true
#| fig-cap: "Distribution of Residential Buildings by Proximity Code"
#| fig-subcap:
#|   - "Yearly Average Residential Building Prices in Brooklyn, Split by Proximity Codes"
#|   - "Count of Residential Buildings Sold in Brooklyn from 2003-2017"
#| layout-ncol: 1

#first figure
brooklyn_sales_res |> 
  filter(prox_code == c("1", "2", "3")) |> 
  mutate(prox_code = as.factor(prox_code),
         prox_code = fct_collapse(prox_code,
                                 "Detached" = "1",
                                 "Semi-attached" = "2",
                                 "Attached" = "3")) |> 
  group_by(year_of_sale, prox_code) |> 
  mutate(yearly_avg_price = mean(sale_price)) |> 
  ggplot(aes(x = year_of_sale, y = yearly_avg_price, color = prox_code)) +
  geom_line() +
  theme_minimal() +
  labs(
    x = "Year",
    y = "Average\nSale\nPrice"
  ) +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  scale_y_continuous(label = scales::dollar_format())

#second figure
brooklyn_sales_res |> 
  filter(prox_code == c("1", "2", "3")) |> 
  mutate(prox_code = as.factor(prox_code),
         prox_code = fct_collapse(prox_code,
                                  "Detached" = "1",
                                  "Semi-attached" = "2",
                                  "Attached" = "3")) |> 
  group_by(prox_code) |> 
  ggplot() +
  geom_bar(aes(x = prox_code))
```

@fig-prox-price-1 reveals that on average, detached and attached buildings were around the same price points from 2003 to 2017, while semi-attached buildings tend to be cheaper than other properties. However, in @fig-prox-price-2, semi-attached buildings are the 2nd most sold, with attached buildings being the highest and detached buildings being the least sold. This information may indicate that the cheapness of semi-attached properties could result in more transfers of properties or sellings.

One factor I thought would be a major aspect of determining building price was the age of the building, since older buildings could be worse quality and therefore not as desired. First off, let's look at the distribution of buildings sold from 2003 to 2017 by age.

```{r}
#| label: fig-age-dist
#| echo: false
#| eval: true
#| fig-cap: "Distribution of Residential Buildings by Age"

brooklyn_sales |> 
  mutate(tax_class_at_sale = str_replace_all(tax_class_at_sale, 
                                             paste(c("1", "2"), 
                                                   collapse = "|", "$", sep = ""), 
                                             "residential")) |> 
  filter(tax_class_at_sale == c("residential"),
         is.na(year_built) == FALSE) |> 
  mutate(
    building_age = year_of_sale - year_built
  ) |> 
  filter(sale_price < 4000000,
         building_age < 120) |> 
  mutate(building_age = cut(
    building_age,
    breaks = c(0, 15, 30, 45, 60, 75, 90, 105, 120))) |> 
  filter(is.na(building_age) == FALSE) |> 
  group_by(building_age) |> 
  ggplot(aes(y = building_age)) +
  theme_minimal() +
  scale_y_discrete(labels = c("0 to 15", "15 to 30", "30 to 45", "45 to 60",
                              "60 to 75", "75 to 90", "90 to 105", "105 to 120")) +
  scale_x_continuous(labels = scales::comma) +
  geom_bar() +
  labs(
    caption = "Source: NYC Department of Finance",
    title = "Count of Sold Brooklyn Residential Building Ages from 2003 to 2017",
    y = "Building\nAge\n(in years)",
    x = "Count"
  ) +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
```

Based on @fig-age-dist, the residential buildings that were sold in Brooklyn the most were heavily older than 75 years old, although there is still a large bulk of buildings being sold that are 0 to 15 years old. Next, I wanted to see if the age affected the price strongly or not.

```{r}
#| label: fig-age-price
#| echo: false
#| eval: true
#| fig-cap: "Average Residential Building Price by Building Age"

brooklyn_sales_res |> 
  mutate(building_age = year_of_sale - year_built) |> 
  filter(sale_price < 4000000, #outlier removal
         sale_price > 100, #outlier removal
         building_age < 120,
         building_age > 0) |>  #outlier removal
  group_by(building_age) |> 
  mutate(age_avg_price = mean(sale_price, na.rm = TRUE)) |> 
  ggplot(aes(x = building_age, y = age_avg_price)) +
  geom_point() +
  geom_jitter() +
  geom_smooth(method = lm)
```
Analyzing @fig-age-price, it appears that the newer buildings (0 to 15 years old) are around the same price as the highly popular 75 to 90 and 90 to 105 range yet are not as sold as often. There also is an interesting dip in average building prices for the 25 to 75 year old building range, and a somewhat exponential growth in building price after 105 years, which could be due to limited samples in buildings that old.

## What neighborhoods are the most popular in Brooklyn?

Another aspect that I wanted to analyze in the data is what neighborhoods are the most popular in Brooklyn and where people tend to buy property. There are an estimated 77 neighborhoods in Brooklyn, although the dataset only gives 61. A rough map for these neighborhoods can be seen below:

![Neighborhood Map of Brooklyn](images/brooklyn_neighborhoods.png)


First off, I want to look at the neighborhoods with the highest number of residential buildings sold from 2003 to 2017, including the mean price of these properties.
```{r}
#| label: fig-table
#| echo: false
#| eval: true
#| fig-cap: "Brooklyn Neighborhoods Ranked by Count of Residential Buildings Sold, 2003-2017"
#| layout-ncol: 1

brooklyn_sales_res |> 
  group_by(neighborhood) |> 
  summarise(
    Average = mean(sale_price),
    count = n()
  ) |> 
  filter(Average > 0,
         count > 1) |> 
  arrange(desc(count)) |> 
  DT::datatable(
    colnames = c(
      'Neighborhood' = 'neighborhood',
      'Count Sold' = 'count'
    )
  ) |> 
  DT::formatRound(columns = 2, digits = 2) |> 
  DT::formatCurrency(columns = "Average", currency = "$")
```

From @fig-table, it appears that the most popular neighborhoods are not the most expensive ones, with the only neighborhood appearing in both the top 10 for count of residential buildings sold and average building price being Park Slope. Rather, these active neighborhoods tend to be lower in price in comparison to the overall averages as seen in @fig-sale-line-1. This information may indicate that these neighborhoods might be quite active in terms of moving ownership or at least might not be seen as places to stay "permanently."

second visualization thing goes here, another way of imagining square ft
```{r}
#| label: fig-sqft-sale
#| echo: false
#| eval: true

brooklyn_sales_res |> 
  group_by(neighborhood) |> 
  summarise(
    avg_sale_n = mean(sale_price),
    sq_avg = mean(land_sqft),
    count = n()
  ) |> 
  filter(avg_sale_n > 0,
         sq_avg < 10000) |> 
  ggplot(aes(x = count, y = sq_avg, alpha = avg_sale_n)) +
  geom_point() + 
  geom_jitter()
```


Next, I wanted to see if the most popular neighborhoods changed depending on the time period.
```{r}
#| label: fig-neighbor-bar
#| echo: false
#| eval: true
#| fig-cap: "Distribution of Sales by Neighborhoods in Brooklyn"
#| fig-subcap:
#|   - "2003-2006"
#|   - "2007-2010"
#|   - "2011-2017"
#| layout-ncol: 1


#2003-2006
brooklyn_sales_res |> 
  filter(year_of_sale == c(2003, 2004, 2005, 2006)) |> 
  group_by(neighborhood) |> 
  mutate(n = n()) |> 
  filter(n > 650) |> 
  ggplot(aes(y = fct_reorder(neighborhood, n))) +
  geom_bar() +
  labs(
    title = "2003-2006 sales"
  )

#2007-2010
brooklyn_sales_res |> 
  filter(year_of_sale == c(2007, 2008, 2009, 2010)) |> 
  group_by(neighborhood) |> 
  mutate(n = n()) |> 
  filter(n > 350) |> 
  ggplot(aes(y = fct_reorder(neighborhood, n))) +
  geom_bar() +
  labs(
    title = "2007-2010 sales"
  )

#2011-2017
brooklyn_sales_res |> 
  filter(year_of_sale == c(2011, 2012, 2013, 2014, 2015, 2016, 2017)) |> 
  group_by(neighborhood) |> 
  mutate(n = n()) |> 
  filter(n > 385) |> 
  ggplot(aes(y = fct_reorder(neighborhood, n))) +
  geom_bar() +
  labs(
    title = "2011-2017 sales"
  )
```
**THESE GRAPHS ARE UGLY FIX THEM AFTER**

Looking at @fig-neighbor-bar-1, @fig-neighbor-bar-2, and @fig-neighbor-bar-3, the neighborhoods of Bedford Stuyvesant, East New York, Bay Ridge, and Borough Park are the most sold residential properties in Brooklyn, which makes sense as these properties are generally cheaper than the overall average prices for residential housing in Brooklyn. However, comparing @fig-neighbor-bar-1 and @fig-table, the neighborhood of Crown Heights appears to be an outlier, as it is relatively higher in price ($519,171.17) yet also getting increasingly popular.

**consider expanding analysis to nonresidential buildings**



# Conclusions

# References {#sec-references}
-   "Annualized Sales Update." NYC Department of Finance, New York City, [www.nyc.gov/site/finance/taxes/property-annualized-sales-update.page](www.nyc.gov/site/finance/taxes/property-annualized-sales-update.page).
-   Wu, Tommy. "Brooklyn Home Sales, 2003 to 2017." Kaggle, 15 Feb. 2018, [www.kaggle.com/datasets/tianhwu/brooklynhomes2003to2017/data](www.kaggle.com/datasets/tianhwu/brooklynhomes2003to2017/data).

